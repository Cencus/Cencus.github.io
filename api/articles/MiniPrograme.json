{"title":"小程序知识","uid":"cfa64a171d4a3ced7e8787ba1d28f1d6","slug":"MiniPrograme","date":"2022-03-31T13:03:51.115Z","updated":"2022-03-27T14:12:21.175Z","comments":true,"path":"api/articles/MiniPrograme.json","keywords":null,"cover":[],"content":"<h2 id=\"15-数组和对象循环\"><a href=\"#15-数组和对象循环\" class=\"headerlink\" title=\"15 数组和对象循环\"></a>15 数组和对象循环</h2><p>数组定义：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ArrayListName:[数组项1,数组项2],<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<span id=\"more\"></span>\n\n<ul>\n<li><p>数组项的类型可以不相同</p>\n</li>\n<li><p>数组项可以是对象</p>\n</li>\n</ul>\n<p>循环</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wx:for&#x3D;&quot;&#123;&#123;数组或者对象&#125;&#125;&quot;\nwx:for-item&#x3D;&quot;循环项的名称&quot;\nwx:for-index&#x3D;&quot;循环项的索引&quot;\n\nwx:key提高性能：\nwx:key&#x3D;&quot;唯一值&quot;\n谓一致<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>唯一值：</p>\n<p>1.绑定string，那么string’s name</p>\n<p>嵌套循环：</p>\n<h2 id=\"16-block\"><a href=\"#16-block\" class=\"headerlink\" title=\"16 block\"></a>16 block</h2><ol>\n<li>占位符</li>\n<li>写代码能看到</li>\n<li>页面渲染会移除掉block只留下里面的内容和标签</li>\n</ol>\n<h2 id=\"17-条件渲染\"><a href=\"#17-条件渲染\" class=\"headerlink\" title=\"17 条件渲染\"></a>17 条件渲染</h2><ol>\n<li>wx:if&#x3D;”Infinity“</li>\n</ol>\n<p>true：显示</p>\n<p>false：隐藏</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;view wx:if&#x3D;&quot;&#123;&#123;&#125;&#125;&quot;&gt;hidden&lt;&#x2F;view&gt;\n&lt;view wx:elif&#x3D;&quot;&#123;&#123;&#125;&#125;&quot;&gt;hidden&lt;&#x2F;view&gt;\n...\n&lt;view wx:else&gt;hidden&lt;&#x2F;view&gt;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<ol start=\"2\">\n<li>hidden</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">隐藏：\n&lt;view hidden&gt;hidden&lt;&#x2F;view&gt; 等效于\n&lt;view hidden&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot;&gt;hidden&lt;&#x2F;view&gt;\n显示：\n&lt;view hidden&#x3D;&quot;&#123;&#123;false&#125;&#125;&quot;&gt;hidden&lt;&#x2F;view&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li><p>什么场景用什么</p>\n<ol>\n<li>标签不会频繁切换显示 优先用：wx:if</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>直接把标签从当前页面结构给移除掉</p></blockquote>\n<ol>\n<li>当标签频繁切换显示 优先用：hidden</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>通过添加样式的方式来切换显示，本质是加一个display：none，所以不要和display一起使用</p></blockquote>\n</li>\n</ol>\n<h2 id=\"18-事件绑定\"><a href=\"#18-事件绑定\" class=\"headerlink\" title=\"18 事件绑定\"></a>18 事件绑定</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token function\">changeInput</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      num<span class=\"token operator\">:</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>bindtap:相当于click事件</p>\n<h2 id=\"19-样式wxss\"><a href=\"#19-样式wxss\" class=\"headerlink\" title=\"19 样式wxss\"></a>19 样式wxss</h2><h2 id=\"20样式导入\"><a href=\"#20样式导入\" class=\"headerlink\" title=\"20样式导入\"></a>20样式导入</h2><p>@import导入，只支持<strong>相对路径</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@import &quot;filepath&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"21选择器\"><a href=\"#21选择器\" class=\"headerlink\" title=\"21选择器\"></a>21选择器</h2><p>不支持通配符*</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">*&#123;\n\tm0;\n\tp0;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解法：罗列全部</p>\n<p>支持的选址器</p>\n<p>和css类似</p>\n<h2 id=\"22-less\"><a href=\"#22-less\" class=\"headerlink\" title=\"22 less\"></a>22 less</h2><p>把wxss后缀名先改成.less最后会自动编译成wxss</p>\n<ol>\n<li>定义使用less变量</li>\n<li>嵌套</li>\n<li>天生支持导入样式表</li>\n</ol>\n<p>如何安装less</p>\n<ol>\n<li>编辑器是vscode</li>\n<li>安装插件easy less】</li>\n<li>在vs code设置中加入如下配置：点击设置</li>\n</ol>\n<pre class=\"line-numbers language-less\" data-language=\"less\"><code class=\"language-less\"><span class=\"token selector\">\"less.compile\":</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token string\">\"outExt\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".wxss\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"23-view-text\"><a href=\"#23-view-text\" class=\"headerlink\" title=\"23 view text\"></a>23 view text</h2><h3 id=\"view\"><a href=\"#view\" class=\"headerlink\" title=\"view\"></a>view</h3><h3 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h3><ol>\n<li>只能嵌套text：</li>\n<li>长按可以复制（只有哦该标签有此功能）</li>\n<li>可以对 空格（@nbsp;） 回车（真回车）等等 进行编码</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>selectable</td>\n<td>布尔</td>\n<td>false</td>\n<td>文本是否可选</td>\n</tr>\n<tr>\n<td>decode</td>\n<td>布尔</td>\n<td>false</td>\n<td>是否解码</td>\n</tr>\n</tbody></table>\n<h3 id=\"image\"><a href=\"#image\" class=\"headerlink\" title=\"image\"></a>image</h3><p>默认宽高</p>\n<ul>\n<li>weight:320px</li>\n<li>height:240px</li>\n</ul>\n<p>lazy-load：直接支持懒加载<br>会自己判断 当图片出现在饰扣上下三屏的高度之内时，自己开始加载图片</p>\n<h2 id=\"swiper\"><a href=\"#swiper\" class=\"headerlink\" title=\"swiper\"></a>swiper</h2><p>  1.轮播图的外层容器就是swiper</p>\n<p>  2.轮播项就是swiper-item</p>\n<p>  3.swiper存在默认样式</p>\n<p>​    height：150px，高度不能被图片撑开</p>\n<p>​    weight：100%，</p>\n<p>  4.图片也是默认的值：320*240</p>\n<p>  5.先找原图的宽高 等比例 找swiper的宽高</p>\n<p>  swiper的宽 &#x2F; swiper的高 &#x3D; 原图的宽 &#x2F; 原图的高</p>\n<p>  swiper的高 &#x3D; swiper的宽 * 原图的高 &#x2F;原图的宽(一般都是宽<em>高，所以是750rpx</em>第二个数&#x2F;第一个数)</p>\n<h2 id=\"navigator\"><a href=\"#navigator\" class=\"headerlink\" title=\"navigator\"></a>navigator</h2><p>导航组件：navigator：超链接</p>\n<ol start=\"0\">\n<li><p>相当于一个块级元素 可以直接添加宽度和高度</p>\n</li>\n<li><p>url：要跳转的路径（绝对或者相对）</p>\n</li>\n<li><p>target：要跳转到当前的小程序（self默认），还是其他小程序(miniProgram)</p>\n</li>\n<li><p>opertype</p>\n<p>​    1.navigate：默认值 保留当前页面 跳转到应用内的某个不是tabbar的页面，如果是tabbar那么不会报错但是不能跳转</p>\n<p>​    2.redirect：保留当前页面 跳转到应用内的某个不是tabbar的页面</p>\n<p>​    3.switchTab：跳转到tabbar并<em>关闭其他非tabbar页面</em></p>\n<p>​    4.reLaunch：关闭所有页面，跳到一个任意页面</p>\n<p>​    5.exit：退出小程序，最好配合target&#x3D;miniprogram</p>\n</li>\n</ol>\n<h2 id=\"rich-text\"><a href=\"#rich-text\" class=\"headerlink\" title=\"rich-text\"></a>rich-text</h2><p>富文本标签：rich-text</p>\n<ol>\n<li><p>通过nodes属性来实现</p>\n<p>​    1. 接收标签字符串（就是一段标签构成的字符串）</p>\n<pre><code>2. 接收对象数组\n</code></pre>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rich-text</span> <span class=\"token attr-name\">nodes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;item.goods_intro&#125;&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>rich-text</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>其中的goods_intro部分：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;goods_intro\n&quot;&lt;div class&#x3D;&quot;123&quot;&gt;我是内容&lt;&#x2F;div&gt;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h2 id=\"icon\"><a href=\"#icon\" class=\"headerlink\" title=\"icon\"></a>icon</h2><p>icon</p>\n<ol>\n<li><p>type：success|success_no_circle|info|warn|waiting|cancel|download|search|clear</p>\n</li>\n<li><p>size：表示图标大小</p>\n</li>\n<li><p>color：同css的颜色</p>\n</li>\n</ol>\n<h2 id=\"radio单选框\"><a href=\"#radio单选框\" class=\"headerlink\" title=\"radio单选框\"></a>radio单选框</h2><p> radio</p>\n<ol>\n<li><p>颜色</p>\n</li>\n<li><p>配合父元素radio-group使用</p>\n</li>\n<li><p>value 选中单选框的值</p>\n</li>\n<li><p>绑定change事件</p>\n</li>\n</ol>\n<h2 id=\"checkbox复选框\"><a href=\"#checkbox复选框\" class=\"headerlink\" title=\"checkbox复选框\"></a>checkbox复选框</h2><h2 id=\"自定义组件\"><a href=\"#自定义组件\" class=\"headerlink\" title=\"自定义组件\"></a>自定义组件</h2><p>需求</p>\n<ol>\n<li><p>我写一个abc就有一个椭圆形的图片框</p>\n</li>\n<li><p>taobao导航模块<br>&#x3D;&#x3D;代码存在公用的时候，提取出来成为自己的组件&#x3D;&#x3D;</p>\n</li>\n<li><p>创建：</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>components -&gt; 标签名 -&gt; 新建component</p></blockquote>\n<ol start=\"2\">\n<li>声明</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>哪个页面要用，就在那个页面的json中用</p></blockquote>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"usingComponents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"tabs\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"../../components/tabs/tabs\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>使用</li>\n</ol>\n<pre class=\"line-numbers language-wxml\" data-language=\"wxml\"><code class=\"language-wxml\">&lt;tabs&gt;&lt;&#x2F;tabs&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"父向子传参\"><a href=\"#父向子传参\" class=\"headerlink\" title=\"父向子传参\"></a>父向子传参</h2><ol>\n<li><p>父组件（页面） 通过标签方式 向子组件 传递数据</p>\n<p>​    属性名：aaa；</p>\n<p>​    属性值：123</p>\n</li>\n<li><p>在子组件上进行接收properties中接收，然后在子组件的wxml中用</p>\n</li>\n</ol>\n<p>eg:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//父页面中：</span>\n<span class=\"token operator\">&lt;</span>tabs  tabs<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;&#123;tabs&#125;&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tabs<span class=\"token operator\">></span>\n<span class=\"token comment\">//属性名tabs，属性值tabs</span>\n\n<span class=\"token comment\">//父JS中</span>\n    <span class=\"token literal-property property\">tabs</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"首页\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isActive</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"原创\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isActive</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"分类\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isActive</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"关于\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isActive</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token punctuation\">]</span>\n子<span class=\"token constant\">JS</span>中：\n<span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//注意是properties而不是什么data</span>\n      <span class=\"token literal-property property\">tabs</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span>Array<span class=\"token punctuation\">,</span><span class=\"token comment\">//类型String，Array</span>\n        <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token comment\">//值，都一般是空的</span>\n\n      <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  子页面中\n  <span class=\"token operator\">&lt;</span>view \n        <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"title_item &#123;&#123;item.isActive?'active':''&#125;&#125;\"</span> \n        <span class=\"token literal-property property\">wx</span><span class=\"token operator\">:</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;&#123;tabs&#125;&#125;\"</span> \n        <span class=\"token literal-property property\">wx</span><span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span>\n        data<span class=\"token operator\">-</span>index<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;&#123;index&#125;&#125;\"</span>\n        bindtap<span class=\"token operator\">=</span><span class=\"token string\">\"handleItemTap\"</span>\n        <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">></span>   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<p>子向父传递</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//子获取到数据</span>\n<span class=\"token comment\">//自定义组件的method函数中</span>\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">triggerEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"父组件的自定义事件名\"</span><span class=\"token punctuation\">,</span>要传递的参数<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//eg：this.triggerEvent(\"itemChange\",index);</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//父组件中：</span>\n<span class=\"token operator\">&lt;</span>tab binditemChange<span class=\"token operator\">=</span><span class=\"token string\">\"handleItemChange\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tab<span class=\"token operator\">></span>\njs：\n<span class=\"token function\">handleItemChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\te<span class=\"token punctuation\">.</span>detai即为传过来的值\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>动态渲染需要实时更新data数据</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">this.data(&#123;\n\tkey:value,\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n\n\n\n\n<h2 id=\"flex布局（弹性布局）\"><a href=\"#flex布局（弹性布局）\" class=\"headerlink\" title=\"flex布局（弹性布局）\"></a>flex布局（弹性布局）</h2><p>原始浮动：块级元素同行显示</p>\n<table>\n<thead>\n<tr>\n<th>优势</th>\n<th>劣势</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>兼容性好</td>\n<td>复杂，局限</td>\n</tr>\n</tbody></table>\n<p>移动端比较适合用flex，PC端可能兼容性不多好</p>\n<p>用于 替换浮动</p>\n<p>两个概念：</p>\n<ol>\n<li>flex container：包裹</li>\n</ol>\n<p>flex布局父项常见属性</p>\n<ul>\n<li>flex-direction：设置<strong>主轴的方向</strong></li>\n<li>justify-content：设置<strong>主轴上子元素的排列方式</strong></li>\n<li>flex-wrap：设置子元素是否换行</li>\n<li>align-content：设置侧轴上子元素的排列方式（多行）</li>\n<li>align-items：设置侧轴上子元素的排列方式（单行）</li>\n<li>flex-flow：复合属性，相当于同时设置了flex-direction和flex-wrap</li>\n</ul>\n<p>justify-content：设置<strong>主轴上子元素的排列方式</strong></p>\n<p>注意：使用前一定要确定主轴方向</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>flex-start</td>\n<td>默认值 从头部开始 如果主轴是x轴 则从左到右</td>\n</tr>\n<tr>\n<td>flex-end</td>\n<td>从尾部开始排列</td>\n</tr>\n<tr>\n<td>center</td>\n<td>在主轴居中对齐（如果主轴是x轴，则水平居中）</td>\n</tr>\n<tr>\n<td>space-around</td>\n<td>平分剩余空间</td>\n</tr>\n<tr>\n<td>space-between</td>\n<td>*先两边贴边 再平分剩余空间</td>\n</tr>\n</tbody></table>\n<p>align-items：设置<strong>侧轴</strong>上子元素的排列方式（单行）</p>\n<p>该属性是控制子项在侧轴（默认y轴）上的排列方式 在子项单行时使用</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>flex-start</td>\n<td>默认值 从上到下</td>\n</tr>\n<tr>\n<td>flex-end</td>\n<td>从下到上</td>\n</tr>\n<tr>\n<td>center</td>\n<td>挤在一起居中（垂直居中）</td>\n</tr>\n<tr>\n<td>stretch</td>\n<td>拉伸</td>\n</tr>\n</tbody></table>\n<p>align-content 设置侧轴上的子元素的排列方式（多行）</p>\n<p>设置子项在侧轴上的排列方式并且只能用于子项出现换行的情况，在单行下是没有用的</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>flex-start</td>\n<td>默认值在侧轴的头部开始排列</td>\n</tr>\n<tr>\n<td>flex-end</td>\n<td>在侧轴的尾部开始排列</td>\n</tr>\n<tr>\n<td>center</td>\n<td>在侧轴中间显示</td>\n</tr>\n<tr>\n<td>space-around</td>\n<td>子项在侧轴平分剩余空间</td>\n</tr>\n<tr>\n<td>space-between</td>\n<td>子项在侧轴先分布在两头 在平分剩余空间</td>\n</tr>\n<tr>\n<td>stretch</td>\n<td>设置子项元素高度平分父元素高度</td>\n</tr>\n</tbody></table>\n<p>align-content与align-items区别</p>\n<ul>\n<li>align-items适用于单行情况，只有上对齐，下对齐，居中和拉伸</li>\n<li>align-content适应于换行（多行）的情况，单行无效，可以设置上对齐，下对齐，居中，拉伸，以及平均分配剩余空间等属性值</li>\n<li>单行用items多行用content</li>\n</ul>\n<p>子项常见属性：</p>\n<ul>\n<li>flex：表示所占的份数，用于布局</li>\n<li>align-self：指定某一个<a href=\"nth-child(n),n%E4%B8%BA1%E5%BA%8F\">^子元素</a>在&#x3D;&#x3D;侧轴上的&#x3D;&#x3D;的排列</li>\n<li>order:指定元素在主轴上的顺序，<strong>越小越靠前</strong></li>\n</ul>\n<h1 id=\"heimaGo商城（微小项目）\"><a href=\"#heimaGo商城（微小项目）\" class=\"headerlink\" title=\"heimaGo商城（微小项目）\"></a>heimaGo商城（微小项目）</h1><p>打开Ali字体图标库</p>\n<p><a href=\"https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a\">https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a</a></p>\n<p>搜索框中搜素需要的字体图标-&gt;鼠标移至想要的图标上再点击购物车-&gt;点击右上方购物车图标-&gt;添加至项目-&gt;font_class-&gt;复制链接到浏览器-&gt;复制全部到style下的新建的iconfont.wxss-&gt;然后在类中引入class&#x3D;”index gouwuche”</p>\n<p>自定义组件</p>\n<p>复习</p>\n<h2 id=\"轮播图\"><a href=\"#轮播图\" class=\"headerlink\" title=\"轮播图\"></a>轮播图</h2><h3 id=\"相关知识：\"><a href=\"#相关知识：\" class=\"headerlink\" title=\"相关知识：\"></a>相关知识：</h3><p>swiper及其相关属性 swiper-item data数组 循环渲染 定义全局主题颜色</p>\n<h3 id=\"相关知识复盘\"><a href=\"#相关知识复盘\" class=\"headerlink\" title=\"相关知识复盘\"></a>相关知识复盘</h3><ol>\n<li>swiper</li>\n</ol>\n<p>swiper存在默认属性:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">width:100%\nheight:150px<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>问题：在屏幕更大一点的时候height不够把图片显示完全，此时需要让swiper的高度去适应图片高度</p>\n<p>方法：①查看原图宽高</p>\n<p>​            ②(750&#x2F;image_width)*image_height</p>\n<p>swiper的常用属性：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">autoplay\nindicator-dots\ncircular<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>自动播放</td>\n<td>autoplay</td>\n</tr>\n<tr>\n<td>显示小圆点</td>\n<td>indicator-dots</td>\n</tr>\n<tr>\n<td>循环播放让切换更加自然</td>\n<td>circular</td>\n</tr>\n</tbody></table>\n<p>参见：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html\">https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html</a></p>\n<ol start=\"2\">\n<li>swiper-item</li>\n</ol>\n<p>这个具体没有什么特别需要说的，嵌套在swiper中，作为放置image和navigator的一个容器，只是有个循环渲染的问题</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>swiper<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>swiper<span class=\"token operator\">-</span>item\n\t<span class=\"token literal-property property\">wx</span><span class=\"token operator\">:</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#123;&#123;data中定义的数组名&#125;&#125;\"</span>\n\t<span class=\"token literal-property property\">wx</span><span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;&#123;数组中定义的关键字&#125;&#125;\"</span>\n\t<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>swiper<span class=\"token operator\">-</span>item<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>swiper<span class=\"token operator\">></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>data中的数组</li>\n</ol>\n<p>定义：数组名:[数组元素]</p>\n<p>数组元素的类型：所有类型，其中对象类型需要特别说明</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//对象用花括号框起来，就像结构体一样的</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token literal-property property\">image_src</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">goods_id</span><span class=\"token operator\">:</span>xxx\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>image</li>\n</ol>\n<p>image标签存在默认值</p>\n<p><code>width:320px;</code></p>\n<p><code>height:240px</code></p>\n<p>问题在于很多图片都不是这个样子，所以image一般需要自己定义属性值，宽 100% 高自适应，这就涉及到mode属性</p>\n<p>mode属性：本次用到的widthFix：宽度固定高度自适应，其他的详见：</p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/image.html\">https://developers.weixin.qq.com/miniprogram/dev/component/image.html</a></p>\n<p>另外，写样式表的时候的步骤</p>\n<p>①改对应页面的wxss为less</p>\n<p>②写一种层叠结构</p>\n<pre class=\"line-numbers language-less\" data-language=\"less\"><code class=\"language-less\"><span class=\"token selector\">.index_swiper</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/*index_swiper的样式区*/</span>\n\t<span class=\"token selector\">swiper</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/*swiper的样式区*/</span>\n\t\t<span class=\"token selector\">image</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">/*image的样式区*/</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>③在对应的区域写对应的样式</p>\n<p>写全局主题颜色的方法：</p>\n<ol>\n<li>在app.wxss中的page里，定义统一的主题颜色</li>\n</ol>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">//app.wxss\npage</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">--themeColor</span><span class=\"token punctuation\">:</span>颜色值\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>使用</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">color:var(--themeColor);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"还存在的问题\"><a href=\"#还存在的问题\" class=\"headerlink\" title=\"还存在的问题\"></a>还存在的问题</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 老师用的是网页上request来获取图片，我是用的本地，需要学习一下怎么从网页拿东西</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function-variable function\">onLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//发送异步请求获取轮播图数据</span>\n    wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://api-hmugo-web.itheima.net/api/public/v1/home/swiperdata'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//成功的回调的函数</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 导航栏不能用主题颜色</li>\n</ul>\n<p>request相关的部分：</p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\">https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html</a></p>\n<p>改request为promise</p>\n<pre class=\"line-numbers language-promise\" data-language=\"promise\"><code class=\"language-promise\">&#x2F;&#x2F;在request中放置promise代码\n&#x2F;&#x2F;或者在util里面放也可\nexport const 方法名&#x3D;()&#x3D;&gt;&#123;\n    return new Promise((resolve,reject)&#x3D;&gt;&#123;\n    &#x2F;&#x2F;要采用Promise的方法 可以是小程序原生的方法\n        wx.getSetting(&#123;\n            success: (result)&#x3D;&gt;&#123;\n                resolve(result);\n            &#125;,\n            fail: (err)&#x3D;&gt;&#123;\n                reject(err);\n            &#125;\n        &#125;);\n    &#125;)\n&#125;\n\n大胆猜测这个params是一个对象，在传参的时候会串一个对象，然后...params解析一下，然后就可以拿里面的东西用了\nlet ajaxTimes &#x3D; 0;\nexport const request&#x3D;(params)&#x3D;&gt;&#123;\n    &#x2F;&#x2F;显示加载中效果\n    ajaxTimes++;\n    wx.showLoading(&#123;\n        title: &#39;加载中&#39;,\n        mask: true,&#x2F;&#x2F;没法进行其他操作\n    &#125;);\n    const baseUrl&#x3D;&quot;https:&#x2F;&#x2F;api-hmugo-web.itheima.net&#x2F;api&#x2F;public&#x2F;v1&quot;;\n    return new Promise((resolve,reject)&#x3D;&gt;&#123;\n        wx.request(&#123;\n           ...params,\n           url:baseUrl+params.url,\n           success:(result)&#x3D;&gt;&#123;\n               resolve(result.data.message);\n           &#125;,\n           fail:(err)&#x3D;&gt;&#123;\n               reject(err);\n           &#125;,\n           complete:()&#x3D;&gt;&#123;\n               ajaxTimes--;\n               if(ajaxTimes&#x3D;&#x3D;&#x3D;0)&#123;\n                wx.hideLoading();\n               &#125;\n           &#125;\n        &#125;);\n    &#125;)\n&#125;\n&#x2F;&#x2F;在需要用的地方引入\nimport &#123; request &#125; from &quot;..&#x2F;..&#x2F;request&#x2F;index.js&quot;;\nimport &#123; getSetting,chooseAddress,openSetting,showModel &#125; from &quot;..&#x2F;..&#x2F;utils&#x2F;asyncWx.js&quot;;\nasync fun_name()&#123;\n\tconst 参数 &#x3D; await 引入的方法名()\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p> es6</p>\n<h2 id=\"分类导航\"><a href=\"#分类导航\" class=\"headerlink\" title=\"分类导航\"></a>分类导航</h2><p>知识点：弹性布局，padding与marging</p>\n<h2 id=\"楼层\"><a href=\"#楼层\" class=\"headerlink\" title=\"楼层\"></a>楼层</h2><p>知识点：嵌套循环渲染，less的使用，选择器的使用，浮动与浮动清除</p>\n<p>image放在navigator的里面</p>\n<ol>\n<li>嵌套循环渲染</li>\n</ol>\n<p>问题：为什么这里会用到嵌套循环渲染？</p>\n<p>答：因为这里有三个楼层（女装，运动，箱包），每个楼层里面分了很多种类型，这就需要嵌套循环</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>floor_group<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;floorList&#125;&#125;<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item1<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>//来循环楼层\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navigator</span>\n     <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;item1.productList&#125;&#125;<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>image</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navigator</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<img src=\"C:\\Users\\Cencus\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200722185453544.png\" alt=\"image-20200722185453544\" style=\"zoom:50%;float:left;\" />\n\n<p>less的使用</p>\n<p>本次实例用到的：直接计算宽高</p>\n<p>单位：vw，类似于百分比</p>\n<p>选择器的使用：</p>\n<p>本节中涉及的：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&amp;:nth-last-chile(-n+4)&#123;&#x2F;&#x2F;选中后四个\n&#125;\n&amp;:nth-child(序号)[,&amp;nth-child()]&#123;&#125;\n\n.floor_list&#123;\n            overflow: hidden;\n            navigator&#123;\n                float: left;\n                width: 30%;\n                    &#x2F;&#x2F; 后四个链\n                &amp;:nth-last-child(-n+4)&#123;\n                    &#x2F;**&#x2F;\n                    &#x2F;&#x2F; 232&#x2F;386&#x3D;33.33vw&#x2F;height\n                    height:30vw*386&#x2F;232&#x2F;2;\n                    border-left:10rpx solid #fff;\n                &#125;\n                &amp;:nth-child(3),\n                &amp;:nth-child(4)&#123;\n                    border-bottom: 10rpx solid #fff;\n                &#125;\n                image&#123;\n                    width: 100%;\n                    height: 100%;\n                &#125;\n            &#125;\n        &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>浮动：</p>\n<p>float:lef</p>\n<p><a href=\"https://www.w3school.com.cn/cssref/css_selectors.asp\">https://www.w3school.com.cn/cssref/css_selectors.asp</a></p>\n<h2 id=\"分类页面：\"><a href=\"#分类页面：\" class=\"headerlink\" title=\"分类页面：\"></a>分类页面：</h2><p>知识点：</p>\n<ol>\n<li>scroll-view的使用，</li>\n<li>用flex布局来居中，</li>\n<li>用类来实现动态效果，</li>\n<li>js编写函数的方式，</li>\n<li>绑定事件的方式，</li>\n<li>wx:key&#x3D;”*this”</li>\n</ol>\n<p>scroll-view作为父组件来让子组件可以滑动</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scroll-view</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu_item<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;leftMenuList&#125;&#125;<span class=\"token punctuation\">\"</span></span>\n     <span class=\"token attr-name\"><span class=\"token namespace\">wx:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*this<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scroll-view</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>wx:key=&quot;*this&quot;</code>:key等于循环项自身</p>\n<p>flex布局来让子元素完全居中</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span>flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-item</span><span class=\"token punctuation\">:</span>center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>有关flex的总结详见：flex布局</p>\n<ul>\n<li>父向常见属性</li>\n<li>子项常见属性</li>\n</ul>\n<p>使用async await来替代.then</p>\n<p>全局变量写在data后面函数前面：</p>\n<pre class=\"line-numbers language-:\" data-language=\":\"><code class=\"language-:\">data&#123;\n\n&#125;,\n&#x2F;&#x2F;全局变量区\n\n\n\nonLoad:function()&#123;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>准备：勾选es6转es5，勾选增强编译，在函数前面加上async</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">getCates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//用常量res来存储获取接口后的数据</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Cates <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><span class=\"token comment\">//存入本地的全局变量</span>\n    \n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>编写函数的一般步骤</p>\n<ol>\n<li>找到要绑定事件的元素</li>\n<li>给元素加上bind<a href=\"tap...\">^xxx</a>&#x3D;”function_name”，考虑是否传参，如果需要加上：data-参数名&#x3D;”“</li>\n<li>在js中书写函数</li>\n</ol>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">function_name</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>4. </p>\n<p>还存在的问题</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> async await</li>\n</ul>\n<h2 id=\"商品列表页面\"><a href=\"#商品列表页面\" class=\"headerlink\" title=\"商品列表页面\"></a>商品列表页面</h2><ol>\n<li><p>子组件向父组件传参，</p>\n</li>\n<li><p>让父组件监听事件</p>\n</li>\n<li><p>forEach方法</p>\n</li>\n<li><p>解构</p>\n</li>\n<li><p>slot</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;image mode=<span class=\"token string\">\"widthFix\"</span> src=<span class=\"token string\">\"&#123;&#123;item.goods_small_logo?item.goods_small_logo:'../../images/empty_img.jpg'&#125;&#125;\"</span> /><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"商品列表动态渲染\"><a href=\"#商品列表动态渲染\" class=\"headerlink\" title=\"商品列表动态渲染\"></a>商品列表动态渲染</h2><p>request带参请求：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span><span class=\"token string\">\"/goods/search\"</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>QueryParams<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"加载下一页效果\"><a href=\"#加载下一页效果\" class=\"headerlink\" title=\"加载下一页效果\"></a>加载下一页效果</h2><p>Math.ceil(value)函数</p>\n<p>例如：Math.ceil(2.3)&#x3D;3，此处用于计算总页数（数据条数&#x2F;页容量）</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 可以尝试了解一下其他的math函数，这个函数时向上取整</li>\n</ul>\n<p>setData中的数组拼接</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">this.setData(&#123;\n\tArray:[...原数组名,...要添加的数组名];&#x2F;&#x2F;eg:goodsList:[...this.data.goodsList,...res.goods]\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>wx-showToast方法：展示一个过会儿就消失的对话框</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">wx<span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'没有下一页数据了'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"下拉刷新效果\"><a href=\"#下拉刷新效果\" class=\"headerlink\" title=\"下拉刷新效果\"></a>下拉刷新效果</h2><p>json中加属性的方法：不需要加什么window直接写属性名:属性值</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">\"\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dark\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><em>2.下拉刷新的逻辑结构：本质是清除所有数据，重新请求数据，请求的时候要把页码置1</em></p>\n<ol>\n<li>下拉刷新事件:需要再json中开启一个配置项</li>\n</ol>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token property\">\"enablePullDownRefresh\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//是否打开下拉刷新</span>\n\t<span class=\"token property\">\"backgroundTextStyle\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dark\"</span><span class=\"token comment\">//是否出现下拉刷新的那三个点点样式</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p> 找到下拉刷新的事件onPullDownRefresh，书写逻辑：</p>\n<ol start=\"2\">\n<li>重置商品数组</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">this.setData(&#123;\n\tgoodsList:[]\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li><p>页码置1</p>\n</li>\n<li><p>数据请求好了关闭刷新效果</p>\n</li>\n</ol>\n<p>两个地方都可以加：</p>\n<p>①在getGoodsList()函数的最后</p>\n<p>②在onPullDownRefresh()函数的最后</p>\n<p>加上：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">wx<span class=\"token punctuation\">.</span><span class=\"token function\">stopPullDownRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"添加全局的正在加载的图标\"><a href=\"#添加全局的正在加载的图标\" class=\"headerlink\" title=\"添加全局的正在加载的图标\"></a>添加全局的正在加载的图标</h2><p>发送请求前显示正在加载中的图标，加载完毕后关闭图标</p>\n<h4 id=\"const、let、var的区别\"><a href=\"#const、let、var的区别\" class=\"headerlink\" title=\"const、let、var的区别\"></a>const、let、var的区别</h4><p><code>let</code> 的用法类似于 <code>var</code>，但是 <code>let</code> <strong>只在所在的代码块内有效（局部变量）</strong>，所以我们一般使用 <code>let</code> 替代 <code>var</code>。而 <code>const</code> 用来声明常量。</p>\n<p>总结：</p>\n<table>\n<thead>\n<tr>\n<th>声明</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>let</td>\n<td>变量</td>\n</tr>\n<tr>\n<td>const</td>\n<td>常量</td>\n</tr>\n</tbody></table>\n<p>添加的位置，request里面的index.js</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n\t&#x2F;&#x2F;\t开头\n    wx.showLoading(&#123;\n      title: &#39;加载中&#39;,\n      mask:true&#x2F;&#x2F;不让页面能被操作\n    &#125;)\n\n\tcomplete()&#x3D;&gt;&#123;\n\t\twx.hideLoading()\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此时注意index页面发送了很多请求，这些请求几乎是同时发生，也就是说，展示”加载中“的对话框会一起展示但是在数据回来的时候，可能一个先回来，然后就关闭页面，此时其他的数据没有回来，没有被渲染，影响体验，此时我们加一个计数器，进来几个退出的时候就要全部退出我才关闭对话框</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//优化</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//\t开头</span>\n\t<span class=\"token keyword\">let</span> ajaxTimes <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tajaxTimes<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\twx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'加载中'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">mask</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token comment\">//不让页面能被操作</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span>\n            ajaxTimes<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ajaxTimes<span class=\"token operator\">===</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            \twx<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"30-商品详情\"><a href=\"#30-商品详情\" class=\"headerlink\" title=\"30.商品详情\"></a>30.商品详情</h2><ol>\n<li>navigator传参：</li>\n</ol>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navigator</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/pages/good_list/index?cid=&#123;&#123;item2.cat_id&#125;&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navigator</span><span class=\"token punctuation\">></span></span>\n\n发请求就要用到：\nimport &#123;request&#125; from \"../../request/index.js\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<h2 id=\"31-商品详情-接口数据和页面分析\"><a href=\"#31-商品详情-接口数据和页面分析\" class=\"headerlink\" title=\"31.商品详情-接口数据和页面分析\"></a>31.商品详情-接口数据和页面分析</h2><p>富文本</p>\n<p>像素单位：</p>\n<table>\n<thead>\n<tr>\n<th>书写</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>px</td>\n<td></td>\n</tr>\n<tr>\n<td>em</td>\n<td></td>\n</tr>\n<tr>\n<td>pt</td>\n<td></td>\n</tr>\n<tr>\n<td>vw</td>\n<td>表示相对视口宽度（viewport width)，1vw&#x3D;1%*视口宽度</td>\n</tr>\n<tr>\n<td>vh</td>\n<td>表示相对视口宽度（viewport height)，1vh&#x3D;1%*视口宽度</td>\n</tr>\n<tr>\n<td>rpx</td>\n<td>resoponse px</td>\n</tr>\n</tbody></table>\n<p>font-weights</p>\n<p>格式化：shift+alt+F</p>\n<h2 id=\"商品详情——优化动态渲染\"><a href=\"#商品详情——优化动态渲染\" class=\"headerlink\" title=\"商品详情——优化动态渲染\"></a>商品详情——优化动态渲染</h2><p>只拿需要的数据</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">goodsDetail</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">goods_name</span><span class=\"token operator\">:</span>goodsInfo<span class=\"token punctuation\">.</span>goods_name<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">goods_price</span><span class=\"token operator\">:</span>goodsInfo<span class=\"token punctuation\">.</span>goods_price<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">pics</span><span class=\"token operator\">:</span>goodsInfo<span class=\"token punctuation\">.</span>pics<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">goods_introduce</span><span class=\"token operator\">:</span>goodsInfo<span class=\"token punctuation\">.</span>goods_introduce\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>在富文本中存在：<a href=\"https://image.suning.cn/uimg/sop/commodity/152418403963754690151350_x.jpg?from=mobile&amp;format=80q.webp\">https://image.suning.cn/uimg/sop/commodity/152418403963754690151350_x.jpg?from=mobile&amp;format=80q.webp</a></p>\n<p>这种webp格式，但是iPhone不能识别这种格式，所以如何临时自己改</p>\n<p>确保后台存在：1.webp&#x3D;&gt;1.jpg</p>\n<p>前端简单的字符串替换：使用正则表达式</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token literal-property property\">goods_introduce</span><span class=\"token operator\">:</span>goodsInfo<span class=\"token punctuation\">.</span>goods_introduce<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.webp</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'.jpg'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"商品详情——放大预览图片\"><a href=\"#商品详情——放大预览图片\" class=\"headerlink\" title=\"商品详情——放大预览图片\"></a>商品详情——放大预览图片</h2><p>步骤分析</p>\n<ol>\n<li>给swiper-item加点击事件：bindtap</li>\n<li>放大预览：利用小程序的api </li>\n<li>给去预览图片的数组</li>\n<li>获取被点击的索引，显示对应的预览图</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;wxml\n&lt;swiper-item data-index&#x3D;&quot;&#123;&#123;index&#125;&#125;&quot;&gt;\n&#x2F;&#x2F;js\nconst urls &#x3D; 对应的图片列表;&#x2F;&#x2F;eg:const urls &#x3D; this.data.goodsObj.pics.map(v&#x3D;&gt;v.pics_mid);\nconst i &#x3D; index;\nwx.previewImage(&#123;\n  current: urls[i], &#x2F;&#x2F; 当前显示图片的http链接\n  urls: urls &#x2F;&#x2F; 需要预览的图片http链接列表\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>相关细节：<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewImage.html\">https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewImage.html</a></p>\n<p>.map(v&#x3D;&gt;v.xxx)</p>\n<h2 id=\"商品详情——底部工具栏\"><a href=\"#商品详情——底部工具栏\" class=\"headerlink\" title=\"商品详情——底部工具栏\"></a>商品详情——底部工具栏</h2><p>position有关的知识</p>\n<p>此处用到了fix，relative，absolute，父相子绝</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/position\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/position</a></p>\n<p>view.iconfont利用style里面的类名来设置图标</p>\n<p>底部工具栏会挡到内容，此时需要把内容向上提：</p>\n<p>page{</p>\n<p>​    padding-bottom:导航栏高度</p>\n<p>}</p>\n<p>障眼法来解决让view像button一样</p>\n<p>方法：让button继承view的宽高，再让他的透明度为0</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;父组件：\n.tool_item&#123;\n\tposition:relative;\n\tbutton&#123;\n\t\twidth:100%;\n\t\theight:100%;\n\t\tposition:absolute;\n\t\tleft:0;\n\t\ttop:0;\n\t\topacity:0;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>购物车在tabbar里面，要想用navigator跳转就要注意open-type的参数应该是switchtab，详见navigator</p>\n<h2 id=\"商品详情——加入购物车\"><a href=\"#商品详情——加入购物车\" class=\"headerlink\" title=\"商品详情——加入购物车\"></a>商品详情——加入购物车</h2><p>逻辑：</p>\n<p>点击事件：在事件中处理，假如购物车的本质应该是商品id，也就是说购物车页面动态渲染一个商品id的数组</p>\n<p>通过id获得对应的名称和价格，本质是要加到购物车页面的数组里，这里就要用到拼接了</p>\n<ol>\n<li><p>绑定点击事件</p>\n</li>\n<li><p>获取本地的购物车缓存</p>\n<ol>\n<li>wx.getStorgeSync(“key”)</li>\n</ol>\n</li>\n<li><p>查看缓存里有没有这个商品</p>\n<p>findIndex函数</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">数组名.findIndex(v&#x3D;&gt;v.goods_id&#x3D;&#x3D;&#x3D;this.data.goodsDetail.goods_id);\n函数作用：返回第一个满足条件的项的索引，如果没有就返回-1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<p>3.1 如果有那么点加入购物车就让这个商品的数量变多(自增)</p>\n<p>3.2 如果没有(index&#x3D;-1)那么久存到购物车数组里,</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cart.push(数组名)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>把缓存存进去</p>\n<ol>\n<li>wx.setStorgeSync(“key”,value)</li>\n</ol>\n</li>\n<li><p>显示弹窗</p>\n</li>\n</ol>\n<p>wx.showToast()</p>\n<h2 id=\"购物车\"><a href=\"#购物车\" class=\"headerlink\" title=\"购物车\"></a>购物车</h2><p>button按钮的属性：</p>\n<p>wx-choooseAddress</p>\n<p>wx-getSetting发现属性名很怪异的时候都要使用[]来获取属性值</p>\n<img src=\"C:\\Users\\Cencus\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200726130614059.png\" alt=\"image-20200726130614059\" style=\"zoom:50%;float:left\" />\n\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//这里要获取scope[]</span>\n<span class=\"token keyword\">const</span> scopeAddr <span class=\"token operator\">=</span> authSetting<span class=\"token punctuation\">[</span><span class=\"token string\">\"scope.address\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>wx-openSetting</p>\n<p>代码优化，如何导入多个异步同步函数</p>\n<p>import {1,2,3} from “..&#x2F;.&#x2F;util&#x2F;async.js”</p>\n<p>对象哪怕是一个空对象的bool类型都是true<br>但是可以拿属性那做</p>\n<p>:nth-child(){<br>}</p>\n<h2 id=\"购物车——列表静态样式\"><a href=\"#购物车——列表静态样式\" class=\"headerlink\" title=\"购物车——列表静态样式\"></a>购物车——列表静态样式</h2><p>快速生成html树</p>\n<p>工具：vscode、插件css tree</p>\n<p>用法：选中需要写less的标签结构，按住ctrl+shift+p输入gen，选择就可以，然后cv操作</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> -webkit-box<span class=\"token punctuation\">;</span>\n<span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-webkit-box-orient</span><span class=\"token punctuation\">:</span> vertical<span class=\"token punctuation\">;</span>\n <span class=\"token property\">-webkit-line-clamp</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"购物车为空\"><a href=\"#购物车为空\" class=\"headerlink\" title=\"购物车为空\"></a>购物车为空</h2><p>使用</p>\n<p>block</p>\n<p>问题：怎么给block里面的元素加样式</p>\n<p>格式化代码:Shift + Alt + F.</p>\n<p>showtoast的icon参数</p>\n","text":"15 数组和对象循环数组定义： ArrayListName:[数组项1,数组项2], 数组项的类型可以不相同 数组项可以是对象 循环 wx:for&#x3D;&quot;&#123;&#123;数组或者对象&#125;&#125;&quot; wx:for-item&#x3D;&...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15-%E6%95%B0%E7%BB%84%E5%92%8C%E5%AF%B9%E8%B1%A1%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">15 数组和对象循环</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-block\"><span class=\"toc-text\">16 block</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#17-%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93\"><span class=\"toc-text\">17 条件渲染</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#18-%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">18 事件绑定</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#19-%E6%A0%B7%E5%BC%8Fwxss\"><span class=\"toc-text\">19 样式wxss</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#20%E6%A0%B7%E5%BC%8F%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">20样式导入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">21选择器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-less\"><span class=\"toc-text\">22 less</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#23-view-text\"><span class=\"toc-text\">23 view text</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#view\"><span class=\"toc-text\">view</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#text\"><span class=\"toc-text\">text</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#image\"><span class=\"toc-text\">image</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#swiper\"><span class=\"toc-text\">swiper</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#navigator\"><span class=\"toc-text\">navigator</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#rich-text\"><span class=\"toc-text\">rich-text</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#icon\"><span class=\"toc-text\">icon</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#radio%E5%8D%95%E9%80%89%E6%A1%86\"><span class=\"toc-text\">radio单选框</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#checkbox%E5%A4%8D%E9%80%89%E6%A1%86\"><span class=\"toc-text\">checkbox复选框</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">自定义组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%B6%E5%90%91%E5%AD%90%E4%BC%A0%E5%8F%82\"><span class=\"toc-text\">父向子传参</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#flex%E5%B8%83%E5%B1%80%EF%BC%88%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80%EF%BC%89\"><span class=\"toc-text\">flex布局（弹性布局）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#heimaGo%E5%95%86%E5%9F%8E%EF%BC%88%E5%BE%AE%E5%B0%8F%E9%A1%B9%E7%9B%AE%EF%BC%89\"><span class=\"toc-text\">heimaGo商城（微小项目）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AE%E6%92%AD%E5%9B%BE\"><span class=\"toc-text\">轮播图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%EF%BC%9A\"><span class=\"toc-text\">相关知识：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E5%A4%8D%E7%9B%98\"><span class=\"toc-text\">相关知识复盘</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%98%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">还存在的问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB%E5%AF%BC%E8%88%AA\"><span class=\"toc-text\">分类导航</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A5%BC%E5%B1%82\"><span class=\"toc-text\">楼层</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2%EF%BC%9A\"><span class=\"toc-text\">分类页面：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">商品列表页面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E5%8A%A8%E6%80%81%E6%B8%B2%E6%9F%93\"><span class=\"toc-text\">商品列表动态渲染</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E8%BD%BD%E4%B8%8B%E4%B8%80%E9%A1%B5%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">加载下一页效果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">下拉刷新效果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%85%A8%E5%B1%80%E7%9A%84%E6%AD%A3%E5%9C%A8%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%9B%BE%E6%A0%87\"><span class=\"toc-text\">添加全局的正在加载的图标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#const%E3%80%81let%E3%80%81var%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">const、let、var的区别</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#30-%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85\"><span class=\"toc-text\">30.商品详情</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31-%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85-%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%88%86%E6%9E%90\"><span class=\"toc-text\">31.商品详情-接口数据和页面分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E2%80%94%E2%80%94%E4%BC%98%E5%8C%96%E5%8A%A8%E6%80%81%E6%B8%B2%E6%9F%93\"><span class=\"toc-text\">商品详情——优化动态渲染</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E2%80%94%E2%80%94%E6%94%BE%E5%A4%A7%E9%A2%84%E8%A7%88%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">商品详情——放大预览图片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E2%80%94%E2%80%94%E5%BA%95%E9%83%A8%E5%B7%A5%E5%85%B7%E6%A0%8F\"><span class=\"toc-text\">商品详情——底部工具栏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E2%80%94%E2%80%94%E5%8A%A0%E5%85%A5%E8%B4%AD%E7%89%A9%E8%BD%A6\"><span class=\"toc-text\">商品详情——加入购物车</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%AD%E7%89%A9%E8%BD%A6\"><span class=\"toc-text\">购物车</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%AD%E7%89%A9%E8%BD%A6%E2%80%94%E2%80%94%E5%88%97%E8%A1%A8%E9%9D%99%E6%80%81%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">购物车——列表静态样式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%BA%E7%A9%BA\"><span class=\"toc-text\">购物车为空</span></a></li></ol>","author":{"name":"Cencus","slug":"blog-author","avatar":"https://gitee.com/cencus/blog-image/raw/master/blogImage/1648381409561.jpg","link":"/","description":"stay hungry, stay foolish.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"思辨","uid":"9db7d7b85a5cd901f6957d349aad6c0c","slug":"思辨","date":"2022-03-31T13:03:51.125Z","updated":"2022-04-15T16:26:51.142Z","comments":true,"path":"api/articles/思辨.json","keywords":null,"cover":null,"text":"2020年7月2日21:15:20 从今日思考：局外人是不是一定比局内人看得更加清楚？为什么问题分析：这个问题的本质是一个不同的角度看待同一个问题会有不同的结果，局内人就是事件的参与者，局外人可能是一个跟他毫不相干的人，可以是他的亲人，可以是他想成为的人，等等，看得更加清楚的意思...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"thinking","slug":"thinking","count":1,"path":"api/tags/thinking.json"}],"author":{"name":"Cencus","slug":"blog-author","avatar":"https://gitee.com/cencus/blog-image/raw/master/blogImage/1648381409561.jpg","link":"/","description":"stay hungry, stay foolish.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"JQuery","uid":"b4a715d3920019ff67db4366ba3b8790","slug":"JQuery","date":"2022-03-31T13:03:51.098Z","updated":"2022-03-29T06:23:54.295Z","comments":true,"path":"api/articles/JQuery.json","keywords":null,"cover":null,"text":"dom对象与jQuery对象 dom对象 var dom = document.getElementById();//原生js获取到的对象就是dom对象 特点：只能调用dom的方法与属性，不能调用jQuery的方法与属性 dom.style.backgroundcolor = '...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[],"tags":[{"name":"前端","slug":"前端","count":1,"path":"api/tags/前端.json"},{"name":"编程","slug":"编程","count":2,"path":"api/tags/编程.json"}],"author":{"name":"Cencus","slug":"blog-author","avatar":"https://gitee.com/cencus/blog-image/raw/master/blogImage/1648381409561.jpg","link":"/","description":"stay hungry, stay foolish.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}